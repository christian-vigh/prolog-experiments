Prolog-10  version 3.3
Copyright (C) 1981 by D. Warren, F. Pereira and L. Byrd

| ?- [pds6].
?

xref.def consulted   96 words      0.09 sec.

dsutil compiled: 4295 words,     4.00 sec.

type compiled: 1391 words,     1.49 sec.

misrg compiled: 808 words,     0.78 sec.

pdsref compiled: 1330 words,     1.59 sec.

pdsdc consulted   1792 words      0.80 sec.

pdsdb consulted   1940 words      0.89 sec.

pdsini consulted   618 words      0.37 sec.

missrc consulted   498 words      0.30 sec.

pdsrg consulted   336 words      0.22 sec.

pdsref consulted   1046 words      0.67 sec.

pds6 consulted   17611 words     14.27 sec.

yes
| ?- [qsort2].
?

qsort2 consulted   240 words      0.28 sec.

yes
| ?- pds.

@qsort([2,1,3],X).
Solving qsort([2,1,3],X)...
Error trapped: no solution to partition([3],2,X,Y)
Error: missing solution partition([3],2,X,Y). diagnosing...

Query: partition([3],2,X,Y)? y.
Which (X,Y)? [],[3].

Query: partition([],2,[],[])? y.
Error diagnosed: partition([3],2,[],[3]) is uncovered.
add (y) or (m)odify a clause? m.
which? partition([X|L],Y,L1,[X|L2]) :- partition(L,Y,L1,L2),X<Y.
Derefining (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),X<Z)...
Checking: (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W))
Found clause: (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W))
    after searching 1 clauses.
ok? n.
Refining: (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W))
Checking: (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X)
Found clause: (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X)
    after searching 5 clauses.
ok? y.
Listing of partition(X,Y,Z,U):
    (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z).
    (partition([],X,[],[]):-true).
    (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X).

Solving qsort([2,1,3],X)...
Error trapped: no solution to qsort([],X)
Error: missing solution qsort([],X). diagnosing...

Query: qsort([],X)? y.
Which X? [].
Error diagnosed: qsort([],[]) is uncovered.
add (y) or (m)odify a clause? y.
which? qsort([],[]).
Listing of qsort(X,Y):
    (qsort([X|Y],Z):-partition(Y,X,W,X1),qsort(W,Z1),qsort(X1,V1),app(Z1,[X|V1],Z)).
    (qsort([],[]):-true).

Solving qsort([2,1,3],X)...
Error: stack overflow on qsort([2,1,3],X). diagnosing...
app([1],[2,3],X) is looping.
Error diagnosed: (app([1],[2,3],X):-app([1],[2,3],[1|X])) is diverging.
retract (y), (m)odify, or (r)eplace it? m.
What is a reason for (app([X|Y],Z,U):-app([X|Y],Z,[X|U]))? app([1,2],[3,4],[1,2,3,4]).
Derefining (app([X|Y],Z,U):-app([X|Y],Z,[X|U]))...
Refining: (app([X|Y],Z,U):-true)
Refining: (app([X,Y|Z],U,V):-true)
Refining: (app([X|Y],[Z|U],V):-true)
Refining: (app([X|Y],Z,[U|V]):-true)
Refining: (app([X|Y],Z,U):-app(Y,Z,X1))

Query: app([2],[3,4],[1,2,3,4])? n.
Refining: (app([X|Y],Z,U):-app(Z,Y,X1))

Query: app([3,4],[2],[1,2,3,4])? n.
Refining: (app([X,Y|Z],U,V):-true)
Refining: (app([X|Y],[Z|U],V):-true)
Refining: (app([X|Y],Z,[U|V]):-true)
Refining: (app([X|Y],Z,U):-app(Y,Z,X1))
Refining: (app([X|Y],Z,U):-app(Z,Y,X1))
Refining: (app([X,Y|Z],[U|V],W):-true)
Refining: (app([X,Y],Z,U):-true)
Refining: (app([X,Y|Z],U,[V|W]):-true)
Refining: (app([X,Y|Z],U,V):-app(U,Z,Y1))

Query: app([3,4],[],[1,2,3,4])? n.
Refining: (app([X,Y|Z],U,V):-app(Z,U,Y1))

Query: app([],[3,4],[1,2,3,4])? n.
Refining: (app([X,Y|Z],[U|V],W):-true)
Refining: (app([X,Y],Z,U):-true)
Refining: (app([X,Y|Z],U,[V|W]):-true)
Refining: (app([X,Y|Z],U,V):-app(U,Z,Y1))
Refining: (app([X,Y|Z],U,V):-app(Z,U,Y1))
Refining: (app([X,Y|Z],[U|V],W):-true)
Refining: (app([X|Y],[Z,U|V],W):-true)
Refining: (app([X|Y],[Z|U],[V|W]):-true)
Refining: (app([X|Y],[Z|U],V):-app(Y,U,Y1))

Query: app([2],[4],[1,2,3,4])? n.
Refining: (app([X|Y],[Z|U],V):-app(U,Y,Y1))

Query: app([4],[2],[1,2,3,4])? n.
Refining: (app([X,Y|Z],[U|V],W):-true)
Refining: (app([X|Y],[Z,U|V],W):-true)
Refining: (app([X|Y],[Z|U],[V|W]):-true)
Refining: (app([X|Y],[Z|U],V):-app(Y,U,Y1))
Refining: (app([X|Y],[Z|U],V):-app(U,Y,Y1))
Refining: (app([X,Y|Z],U,[V|W]):-true)
Refining: (app([X|Y],[Z|U],[V|W]):-true)
Refining: (app([X|Y],Z,[U,V|W]):-true)
Refining: (app([X|Y],Z,[U|V]):-app(Y,Z,Y1))

Query: app([2],[3,4],[2,3,4])? y.
Checking: (app([X|Y],Z,[X|V]):-app(Y,Z,V))
Found clause: (app([X|Y],Z,[X|V]):-app(Y,Z,V))
    after searching 289 clauses.
ok? y.
Listing of app(X,Y,Z):
    (app([],X,X):-true).
    (app([X|Y],Z,[X|V]):-app(Y,Z,V)).

Solving qsort([2,1,3],X)...
solution: qsort([2,1,3],[1,2,3]); ok? y.
no (more) solutions. ok? y.

@qsort([2,1,4,3],X).
Solving qsort([2,1,4,3],X)...
solution: qsort([2,1,4,3],[1,2,3,4]); ok? y.
no (more) solutions. ok? y.

@qsort([2,1,2,3],X).
Solving qsort([2,1,2,3],X)...
solution: qsort([2,1,2,3],[1,2,2,3]); ok? n.
Error: wrong solution qsort([2,1,2,3],[1,2,2,3]). diagnosing...

Query: qsort([1,2],[1,2])? y.

Query: qsort([3],[3])? y.

Query: app([1,2],[2,3],[1,2,2,3])? y.

Query: partition([1,2,3],2,[1,2],[3])? n.

Query: partition([2,3],2,[2],[3])? n.
Error diagnosed: (partition([2,3],2,[2],[3]):-partition([3],2,[],[3]),2=<2) is false.
retract (y), (m)odify, or (r)eplace it? m.
What is a reason for (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z)? partition([1],2,[1],[]).
Checking: (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z)
Refuted: (partition([2,3],2,[2],[3]):-partition([3],2,[],[3]),2=<2)
Refining: (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z)
Checking: (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z,X<Z)
Found clause: (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z,X<Z)
    after searching 3 clauses.
ok? y.
Listing of partition(X,Y,Z,U):
    (partition([],X,[],[]):-true).
    (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X).
    (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z,X<Z).

Solving qsort([2,1,2,3],X)...
Error trapped: no solution to partition([2,3],2,X,Y)
Error: missing solution partition([2,3],2,X,Y). diagnosing...

Query: partition([2,3],2,X,Y)? y.
Which (X,Y)? [],[3].
Error diagnosed: partition([2,3],2,[],[3]) is uncovered.
add (y) or (m)odify a clause? m.
which? any.
Refining: (partition(X,Y,Z,U):-true)
Refining: (partition([X|Y],Z,U,V):-true)
Refining: (partition(X,Y,[],Z):-true)
Refining: (partition(X,Y,Z,[U|V]):-true)
Refining: (partition([X|Y],Z,U,V):-true)
Refining: (partition(X,Y,[],Z):-true)
Refining: (partition(X,Y,Z,[U|V]):-true)
Refining: (partition([X,Y|Z],U,V,W):-true)
Refining: (partition([X|Y],Z,[],U):-true)
Checking: (partition([X|Y],Z,[],Y):-true)
Refuted: (partition([3],2,[],[]):-true)
Checking: (partition([X|Y],Z,[],Y):-true)
Refuted: (partition([3],2,[],[]):-true)
Refining: (partition([X|Y],Z,U,[V|W]):-true)
Refining: (partition([X|Y],X,U,V):-true)
Refining: (partition([X|Y],Z,U,V):-partition(Y,Z,Y1,Z1))
Checking: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V))
Found clause: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V))
    after searching 99 clauses.
ok? y.
Listing of partition(X,Y,Z,U):
    (partition([],X,[],[]):-true).
    (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X).
    (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z,X<Z).
    (partition([X|Y],Z,U,V):-partition(Y,Z,U,V)).

Error: wrong solution partition([3],2,[],[]). diagnosing...
Error diagnosed: (partition([3],2,[],[]):-partition([],2,[],[])) is false.
retract (y), (m)odify, or (r)eplace it? m.
What is a reason for (partition([X|Y],Z,U,V):-partition(Y,Z,U,V))? partition([2],2,[],[]).
Checking: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V))
Found clause: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V))
    after searching 1 clauses.
ok? n.
Refining: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V))
Checking: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z)
Found clause: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z)
    after searching 5 clauses.
ok? y.
Listing of partition(X,Y,Z,U):
    (partition([],X,[],[]):-true).
    (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X).
    (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z,X<Z).
    (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z).

Solving qsort([2,1,2,3],X)...
Error trapped: too many solutions to partition([1,2,3],2,X,Y)

Query: partition([1,2,3],2,[],[3])? n.
Error: wrong solution partition([1,2,3],2,[],[3]). diagnosing...
Error diagnosed: (partition([1,2,3],2,[],[3]):-partition([2,3],2,[],[3]),1=<2) is false.
retract (y), (m)odify, or (r)eplace it? m.
What is a reason for (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z)? partition([2],2,[],[]).
Checking: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z)
Refuted: (partition([1,2,3],2,[],[3]):-partition([2,3],2,[],[3]),1=<2)
Refining: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z)
Checking: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z,Z=<X)
Found clause: (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z,Z=<X)
    after searching 3 clauses.
ok? y.
Listing of partition(X,Y,Z,U):
    (partition([],X,[],[]):-true).
    (partition([X|Y],Z,U,[X|W]):-partition(Y,Z,U,W),Z<X).
    (partition([X|Y],Z,[X|V],W):-partition(Y,Z,V,W),X=<Z,X<Z).
    (partition([X|Y],Z,U,V):-partition(Y,Z,U,V),X=<Z,Z=<X).

Solving qsort([2,1,2,3],X)...
solution: qsort([2,1,2,3],[1,2,3]); ok? y.
no (more) solutions. ok? y.

@
@exit.

yes
| ?- listing(qsort).

qsort([_1|_2],_3) :-
   partition(_2,_1,_4,_5),
   qsort(_4,_6),
   qsort(_5,_7),
   app(_6,[_1|_7],_3).
qsort([],[]).

yes
| ?- listing(partition).

partition([],_1,[],[]).
partition([_1|_2],_3,_4,[_1|_5]) :-
   partition(_2,_3,_4,_5),
   _3<_1.
partition([_1|_2],_3,[_1|_4],_5) :-
   partition(_2,_3,_4,_5),
   _1=<_3,
   _1<_3.
partition([_1|_2],_3,_4,_5) :-
   partition(_2,_3,_4,_5),
   _1=<_3,
   _3=<_1.

yes
| ?- listing(app).

app([],_1,_1).
app([_1|_2],_3,[_1|_4]) :-
   app(_2,_3,_4).

yes
| ?- core    133632  (88064 lo-seg + 45568 hi-seg)
heap     71168 =  20278 in use +  50890 free
global    1451 =     16 in use +   1435 free
local     1024 =     16 in use +   1008 free
trail      511 =      0 in use +    511 free
    0.03 sec. for 1 GCs gaining 25 words
    0.35 sec. for 26 local shifts and 33 trail shifts
   67.58 sec. runtime
Prolog-10  version 3.3
Copyright (C) 1981 by D. Warren, F. Pereira and L. Byrd

| ?- [mis].
?

xref.def consulted   96 words      0.09 sec.

misrg compiled: 936 words,     0.85 sec.

dsutil compiled: 4167 words,     4.04 sec.

pdsref compiled: 1398 words,     1.61 sec.

type compiled: 1324 words,     1.52 sec.
?
?
?
?
?
?
?
?
?
?
?
?
?
?

pdsini consulted   94 words      0.33 sec.

pdsdc consulted   1784 words      0.89 sec.

pdsdb consulted   1912 words      0.96 sec.

missrc consulted   498 words      0.30 sec.

mis consulted   14997 words     13.25 sec.

yes
| ?- value(X,Y).

X = search_strategy,
Y = adaptive ;

no
| ?- retract(value(X,Y)).

X = search_strategy,
Y = adaptive 

yes
| ?- assert(value(search_strategy,eager))).

***syntax error***
assert(value(search_strategy,eager))
***here***
).
|    
|    no.

no
| ?- assert(value(search_strategy,eager)).

yes
| ?- mis.

Next fact? isort([2,3,1],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: isort([2,3,1],[1,2,3]) is uncovered.

Searching for a cover to isort([2,3,1],[1,2,3])...
Declare isort(X,Y)? declare(isort(+[x],-[x]),[total,determinate]).
Refining: (isort(X,Y):-true)
Procedures called by isort(X,Y)? isort(_,_),insert(_,_,_).
Refining: (isort([X|Y],Z):-true)
Declare insert(X,Y,Z)? Declare insert(X,Y,Z)? [ Execution aborted ]

| ?- core     80384  (34816 lo-seg + 45568 hi-seg)
heap     17920 =  16588 in use +   1332 free
global    1451 =     16 in use +   1435 free
local     1024 =     16 in use +   1008 free
trail      511 =      0 in use +    511 free
    0.01 sec. for 1 GCs gaining 921 words
    0.06 sec. for 13 local shifts and 14 trail shifts
   15.29 sec. runtime
Prolog-10  version 3.3
Copyright (C) 1981 by D. Warren, F. Pereira and L. Byrd

| ?- [mis].
?

xref.def consulted   96 words      0.09 sec.

misrg compiled: 936 words,     0.84 sec.

dsutil compiled: 4167 words,     4.04 sec.

pdsref compiled: 1398 words,     1.59 sec.

type compiled: 1324 words,     1.56 sec.
?
?
?
?
?
?
?
?
?
?
?
?
?
?

pdsini consulted   94 words      0.31 sec.

pdsdc consulted   1784 words      0.80 sec.

pdsdb consulted   1912 words      0.89 sec.

missrc consulted   498 words      0.28 sec.

mis consulted   14997 words     12.96 sec.

yes
| ?- [pdsini].

pdsini consulted   560 words      0.37 sec.

yes
| ?- mis.

Next fact? isort([2,3,1],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: isort([2,3,1],[1,2,3]) is uncovered.

Searching for a cover to isort([2,3,1],[1,2,3])...
Refining: (isort(X,Y):-true)
Refining: (isort([X|Y],Z):-true)
Refining: (isort(X,[Y|Z]):-true)
Refining: (isort([X,Y|Z],U):-true)
Refining: (isort([X|Y],[Z|U]):-true)
Refining: (isort([X|Y],[Z|U]):-true)
Refining: (isort(X,[Y,Z|U]):-true)
Refining: (isort([X,Y,Z|U],V):-true)
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X|Y],[Z,U|V]):-true)
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X|Y],[Z,U|V]):-true)
Refining: (isort([X|Y],[Z,U|V]):-true)
Refining: (isort(X,[Y,Z,U|V]):-true)
Refining: (isort([X,Y,Z],U):-true)
Refining: (isort([X,Y,Z|U],[V|W]):-true)
Refining: (isort([X,Y,Z|U],[V|W]):-true)
Refining: (isort([X,Y|Z],[U,V|W]):-true)
Refining: (isort([X,Y,Z|U],[V|W]):-true)
Refining: (isort([X,Y|Z],[U,V|W]):-true)
Refining: (isort([X,Y|Z],[U,V|W]):-true)
Refining: (isort([X|Y],[Z,U,V|W]):-true)
Refining: (isort([X,Y,Z|U],[V|W]):-true)
Refining: (isort([X,Y|Z],[U,V|W]):-true)
Refining: (isort([X,Y|Z],[U,V|W]):-true)
Refining: (isort([X|Y],[Z,U,V|W]):-true)
Refining: (isort([X,Y|Z],[U,V|W]):-true)
Refining: (isort([X|Y],[Z,U,V|W]):-true)
Refining: (isort([X|Y],[Z,U,V|W]):-true)
Refining: (isort(X,[Y,Z,U]):-true)
Refining: (isort([X,Y,Z],[U|V]):-true)
Refining: (isort([X,Y,Z],[U|V]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y,Z],[U|V]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X,Y,Z],[U|V]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X|Y],[Z,U,V]):-true)
Refining: (isort([X,Y,Z],[U|V]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X|Y],[Z,U,V]):-true)
Refining: (isort([X,Y,Z|U],[V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X|Y],[Z,U,V]):-true)
Refining: (isort([X,Y|Z],[U,V,W|X1]):-true)
Refining: (isort([X|Y],[Z,U,V]):-true)
Refining: (isort([X|Y],[Z,U,V]):-true)
Refining: (isort([X,Y,Z],[U,V|W]):-true)
Refining: (isort([X,Y,Z],[U,V|W]):-true)
Refining: (isort([X,Y,Z],[U,V|W]):-true)
Refining: (isort([X,Y,Z|U],[V,W,X1|Y1]):-true)
Checking: (isort([X,Y,Z|U],[Z,X,Y|U]):-true)
Found clause: (isort([X,Y,Z|U],[Z,X,Y|U]):-true)
    after searching 117 clauses.
Listing of isort(X,Y):
    (isort([X,Y,Z|U],[Z,X,Y|U]):-true).

Checking fact(s)...no error found.

Next fact? !Illegal input

Next fact? [ Execution aborted ]

| ?- core     91648  (46080 lo-seg + 45568 hi-seg)
heap     29184 =  16882 in use +  12302 free
global    1451 =     16 in use +   1435 free
local     1024 =     16 in use +   1008 free
trail      511 =      0 in use +    511 free
    0.01 sec. for 1 GCs gaining 921 words
    0.08 sec. for 15 local shifts and 17 trail shifts
   30.17 sec. runtime
Prolog-10  version 3.3
Copyright (C) 1981 by D. Warren, F. Pereira and L. Byrd

| ?- [mis].
?

xref.def consulted   96 words      0.09 sec.

misrg compiled: 936 words,     0.83 sec.

dsutil compiled: 4167 words,     3.96 sec.

pdsref compiled: 1398 words,     1.60 sec.

type compiled: 1324 words,     1.54 sec.
?
?
?
?
?
?
?
?
?
?
?
?
?
?

pdsini consulted   94 words      0.30 sec.

pdsdc consulted   1784 words      0.90 sec.

pdsdb consulted   1912 words      1.02 sec.

missrc consulted   498 words      0.30 sec.

mis consulted   14997 words     13.23 sec.

yes
| ?- [pdsini].

pdsini consulted   560 words      0.38 sec.

yes
| ?- retract(value(X,Y)).

X = search_strategy,
Y = adaptive ;

no
| ?- assert(value(search_strategy,eager)).

yes
| ?- mis.

Next fact? isort([2,3,1],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: isort([2,3,1],[1,2,3]) is uncovered.

Searching for a cover to isort([2,3,1],[1,2,3])...
Refining: (isort(X,Y):-true)
Refining: (isort([X|Y],Z):-true)
Refining: (isort(X,[Y|Z]):-true)
Refining: (isort([X,Y|Z],U):-true)
Refining: (isort([X|Y],[Z|U]):-true)
Refining: (isort([X|Y],Z):-isort(Y,V))

Query: isort([3,1],[1,2,3])? n.
Refining: (isort([X|Y],Z):-insert(X,Y,W))

Query: insert(2,[3,1],[1,2,3])? n.
Refining: (isort([X|Y],[Z|U]):-true)
Refining: (isort(X,[Y,Z|U]):-true)
Refining: (isort([X,Y,Z|U],V):-true)
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X,Y|Z],U):-isort(Z,W))

Query: isort([1],[1,2,3])? n.
Refining: (isort([X,Y|Z],U):-insert(X,Z,X1))

Query: insert(2,[1],[1,2,3])? n.
Refining: (isort([X,Y|Z],U):-insert(Y,Z,X1))

Query: insert(3,[1],[1,2,3])? n.
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X|Y],[Z,U|V]):-true)
Refining: (isort([X|Y],[Z|U]):-isort(Y,W))
Refining: (isort([X|Y],[Z|U]):-insert(X,Y,X1))
Refining: (isort([X|Y],Z):-isort(Y,V),insert(X,Y,Y1))
Refining: (isort([X|Y],Z):-isort(Y,V),insert(X,V,Y1))

Query: isort([3,1],X)? y.
Which X? [1,3].

Query: insert(2,[1,3],[1,2,3])? y.
Checking: (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z))
Found clause: (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z))
    after searching 61 clauses.
Listing of isort(X,Y):
    (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z)).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...

Query: isort([1],X)? y.
Which X? [1].

Query: isort([],X)? y.
Which X? [].
Error diagnosed: isort([],[]) is uncovered.

Searching for a cover to isort([],[])...
Refining: (isort(X,Y):-true)
Checking: (isort(X,X):-true)
Refuted: (isort([3,1],[3,1]):-true)
Checking: (isort(X,[]):-true)
Refuted: (isort([3,1],[]):-true)
Refining: (isort(X,X):-true)
Checking: (isort([],[]):-true)
Found clause: (isort([],[]):-true)
    after searching 5 clauses.
Listing of isort(X,Y):
    (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z)).
    (isort([],[]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...

Query: insert(1,[],[1])? y.
Error diagnosed: insert(1,[],[1]) is uncovered.

Searching for a cover to insert(1,[],[1])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[],Y):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Checking: (insert(X,Y,[X|Y]):-true)
Found clause: (insert(X,Y,[X|Y]):-true)
    after searching 7 clauses.
Listing of insert(X,Y,Z):
    (insert(X,Y,[X|Y]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...

Query: insert(3,[1],[1,3])? y.
Error diagnosed: insert(3,[1],[1,3]) is uncovered.

Searching for a cover to insert(3,[1],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))

Query: insert(3,[],[1,3])? n.
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))

Query: insert(1,[],[1,3])? n.
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Found clause: (insert(X,[Y|Z],[Y,X|Z]):-true)
    after searching 27 clauses.
Listing of insert(X,Y,Z):
    (insert(X,Y,[X|Y]):-true).
    (insert(X,[Y|Z],[Y,X|Z]):-true).

Checking fact(s)...no error found.

Next fact? break.

[ Break  (level 1) ]
| ?- isort([2,3,1],X).

X = [2,3,1] ;

X = [3,2,1] ;

X = [2,1,3] ;

X = [1,2,3] ;

[1] no
| ?- [ End Break  (level 1) ]
Next fact? isort([2,3,1],[2,3,1]),false.
Checking fact(s)...
Error: wrong solution isort([2,3,1],[2,3,1]). diagnosing...

Query: insert(3,[1],[3,1])? n.
Error diagnosed: (insert(3,[1],[3,1]):-true) is false.
Listing of insert(X,Y,Z):
    (insert(X,[Y|Z],[Y,X|Z]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: insert(1,[],[1]) is uncovered.

Searching for a cover to insert(1,[],[1])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[],Y):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Checking: (insert(X,Y,[X|Y]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[],[Y|Z]):-true)
Refining: (insert(X,Y,[X|Y]):-true)
Checking: (insert(X,[],[X]):-true)
Found clause: (insert(X,[],[X]):-true)
    after searching 9 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[Y|Z],[Y,X|Z]):-true).
    (insert(X,[],[X]):-true).

Checking fact(s)...no error found.

Next fact? break.

[ Break  (level 1) ]
| ?- isort([2,3,1],X).

X = [1,2,3] ;

[1] no
| ?- isort([2,1,3],X).

X = [3,2,1] ;

[1] no
| ?- [ End Break  (level 1) ]
Next fact? isort([2,1,3],[3,2,1]),false.
Checking fact(s)...
Error: wrong solution isort([2,1,3],[3,2,1]). diagnosing...

Query: isort([3],[3])? y.

Query: isort([1,3],[3,1])? n.

Query: insert(1,[3],[3,1])? n.
Error diagnosed: (insert(1,[3],[3,1]):-true) is false.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: insert(3,[1],[1,3]) is uncovered.

Searching for a cover to insert(3,[1],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))

Query: insert(3,[],[3])? y.
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))

Query: insert(1,[],[3])? n.
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,Y,[Z,U]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y|Z],[Y,X|Z]):-true)
Checking: (insert(X,[Y],[Y,X]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-Y<X)
Found clause: (insert(X,[Y|Z],[Y,X|Z]):-Y<X)
    after searching 46 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[Y,X|Z]):-Y<X).

Checking fact(s)...no error found.

Next fact? break.

[ Break  (level 1) ]
| ?- isort([2,1,3],X).

[1] no
| ?- [ End Break  (level 1) ]
Next fact? isort([2,1,3],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,1,3],[1,2,3]). diagnosing...

Query: isort([1,3],X)? y.
Which X? [1,3].

Query: insert(1,[3],[1,3])? y.
Error diagnosed: insert(1,[3],[1,3]) is uncovered.

Searching for a cover to insert(1,[3],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Checking: (insert(X,Y,[X|Y]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))
Refining: (insert(X,Y,[X|Y]):-true)
Checking: (insert(X,[Y|Z],[X,Y|Z]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[X,Y|Z]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Checking: (insert(X,[Y|Z],[X|V]):-insert(Y,Z,V))
Refuted: (insert(3,[1],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[X,Y|Z]):-true)
Checking: (insert(X,[Y],[X,Y]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Checking: (insert(X,[Y|Z],[X,Y|Z]):-X<Y)
Found clause: (insert(X,[Y|Z],[X,Y|Z]):-X<Y)
    after searching 33 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[Y,X|Z]):-Y<X).
    (insert(X,[Y|Z],[X,Y|Z]):-X<Y).

Checking fact(s)...no error found.

Next fact? break.

[ Break  (level 1) ]
| ?- isort([2,1,3],X).

X = [1,2,3] ;

[1] no
| ?- isort([3,2,1],X).

X = [1,3,2] ;

[1] no
| ?- [ End Break  (level 1) ]
Next fact? isort([3,2,1],[1,3,2]),false.
Checking fact(s)...
Error: wrong solution isort([3,2,1],[1,3,2]). diagnosing...

Query: isort([2,1],[1,2])? y.

Query: insert(3,[1,2],[1,3,2])? n.
Error diagnosed: (insert(3,[1,2],[1,3,2]):-1<3) is false.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[X,Y|Z]):-X<Y).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: insert(3,[1],[1,3]) is uncovered.

Searching for a cover to insert(3,[1],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,Y,[Z,U]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y|Z],[Y,X|Z]):-true)
Checking: (insert(X,[Y],[Y,X]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-Y<X)
Refuted: (insert(3,[1,2],[1,3,2]):-1<3)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-Y=<X)
Refuted: (insert(3,[1,2],[1,3,2]):-1=<3)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y|Z],[U,V]):-true)
Checking: (insert(X,[Y|Z],[Y,X]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-insert(X,Z,Z1))

Query: insert(3,[],[])? n.
Refining: (insert(X,[Y|Z],[U,V|W]):-insert(Y,Z,Z1))

Query: insert(1,[],[])? n.
Refining: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V),Y<X)
Found clause: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V),Y<X)
    after searching 53 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[X,Y|Z]):-X<Y).
    (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V),Y<X).

Checking fact(s)...no error found.

Next fact? !Illegal input

Next fact? [ Execution aborted ]

| ?- core    101888  (56320 lo-seg + 45568 hi-seg)
heap     39424 =  17840 in use +  21584 free
global    1451 =     16 in use +   1435 free
local     1024 =     16 in use +   1008 free
trail      511 =      0 in use +    511 free
    0.16 sec. for 5 GCs gaining 16004 words
    0.05 sec. for 30 local shifts and 37 trail shifts
   51.34 sec. runtime
Prolog-10  version 3.3
Copyright (C) 1981 by D. Warren, F. Pereira and L. Byrd

| ?- [mis].
?

xref.def consulted   96 words      0.11 sec.

misrg compiled: 936 words,     0.87 sec.

dsutil compiled: 4167 words,     4.02 sec.

pdsref compiled: 1398 words,     1.76 sec.

type compiled: 1324 words,     1.49 sec.
?
?
?
?
?
?
?
?
?
?
?
?
?
?

pdsini consulted   94 words      0.31 sec.

pdsdc consulted   1784 words      0.85 sec.

pdsdb consulted   1912 words      0.90 sec.

missrc consulted   498 words      0.28 sec.

mis consulted   14997 words     13.18 sec.

yes
| ?- retract(value(X,Y)),assert(value(X,eager)).

X = search_strategy,
Y = adaptive ;

X = search_strategy,
Y = eager ;

X = search_strategy,
Y = eager ;

X = search_strategy,
Y = eager ;

X = search_strategy,
Y = eager 

yes
| ?- value(X,Y).

X = search_strategy,
Y = eager ;

no
| ?- mis.

Next fact? isort([2,3,1],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: isort([2,3,1],[1,2,3]) is uncovered.

Searching for a cover to isort([2,3,1],[1,2,3])...
Declare isort(X,Y)? declare(isort(+[x],-[x]),[total,determinate]).
Refining: (isort(X,Y):-true)
Procedures called by isort(X,Y)? isort(_,_),insert(_,_,_).
Refining: (isort([X|Y],Z):-true)
Declare insert(X,Y,Z)? declare(insert(+x,+[x],-[x]),[total,determinate].

***syntax error***
declare(insert(+ x,+[x],-[x]),[total,determinate]
***here***
.
|: 
|: 
|: Declare insert(X,Y,Z)? [ Execution aborted ]

| ?- mis.

Next fact? isort([2,3,1],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: isort([2,3,1],[1,2,3]) is uncovered.

Searching for a cover to isort([2,3,1],[1,2,3])...
Refining: (isort(X,Y):-true)
Declare insert(X,Y,Z)? declare(insert(+x,+[x],-[x]),[total,determinate])
|: .
Refining: (isort([X|Y],Z):-true)
Refining: (isort(X,[Y|Z]):-true)
Refining: (isort([X,Y|Z],U):-true)
Refining: (isort([X|Y],[Z|U]):-true)
Refining: (isort([X|Y],Z):-isort(Y,V))

Query: isort([3,1],[1,2,3])? n.
Refining: (isort([X|Y],Z):-insert(X,Y,W))

Query: insert(2,[3,1],[1,2,3])? n.
Refining: (isort([X|Y],[Z|U]):-true)
Refining: (isort(X,[Y,Z|U]):-true)
Refining: (isort([X,Y,Z|U],V):-true)
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X,Y|Z],U):-isort(Z,W))

Query: isort([1],[1,2,3])? n.
Refining: (isort([X,Y|Z],U):-insert(X,Z,X1))

Query: insert(2,[1],[1,2,3])? n.
Refining: (isort([X,Y|Z],U):-insert(Y,Z,X1))

Query: insert(3,[1],[1,2,3])? n.
Refining: (isort([X,Y|Z],[U|V]):-true)
Refining: (isort([X|Y],[Z,U|V]):-true)
Refining: (isort([X|Y],[Z|U]):-isort(Y,W))
Refining: (isort([X|Y],[Z|U]):-insert(X,Y,X1))
Refining: (isort([X|Y],Z):-isort(Y,V),insert(X,Y,Y1))
Refining: (isort([X|Y],Z):-isort(Y,V),insert(X,V,Y1))

Query: isort([3,1],X)? y.
Which X? [1,3].

Query: insert(2,[1,3],[1,2,3])? y.
Checking: (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z))
Found clause: (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z))
    after searching 61 clauses.
Listing of isort(X,Y):
    (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z)).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...

Query: isort([1],X)? y.
Which X? [1].

Query: isort([],X)? y.
Which X? [].
Error diagnosed: isort([],[]) is uncovered.

Searching for a cover to isort([],[])...
Refining: (isort(X,Y):-true)
Checking: (isort(X,X):-true)
Refuted: (isort([3,1],[3,1]):-true)
Checking: (isort(X,[]):-true)
Refuted: (isort([3,1],[]):-true)
Refining: (isort(X,X):-true)
Checking: (isort([],[]):-true)
Found clause: (isort([],[]):-true)
    after searching 5 clauses.
Listing of isort(X,Y):
    (isort([X|Y],Z):-isort(Y,V),insert(X,V,Z)).
    (isort([],[]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...

Query: insert(1,[],[1])? y.
Error diagnosed: insert(1,[],[1]) is uncovered.

Searching for a cover to insert(1,[],[1])...
Refining: (insert(X,Y,Z):-true)
Procedures called by insert(X,Y,Z)? insert(_,_,_),_=<_.
Refining: (insert(X,[],Y):-true)
Declare X=<Y? declare(=<(+x,+x),[total,determinate]).
Refining: (insert(X,Y,[Z|U]):-true)
Checking: (insert(X,Y,[X|Y]):-true)
Found clause: (insert(X,Y,[X|Y]):-true)
    after searching 8 clauses.
Listing of insert(X,Y,Z):
    (insert(X,Y,[X|Y]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...

Query: insert(3,[1],[1,3])? y.
Error diagnosed: insert(3,[1],[1,3]) is uncovered.

Searching for a cover to insert(3,[1],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))

Query: insert(3,[],[1,3])? n.
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))

Query: insert(1,[],[1,3])? n.
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Found clause: (insert(X,[Y|Z],[Y,X|Z]):-true)
    after searching 27 clauses.
Listing of insert(X,Y,Z):
    (insert(X,Y,[X|Y]):-true).
    (insert(X,[Y|Z],[Y,X|Z]):-true).

Checking fact(s)...no error found.

Next fact? break.

[ Break  (level 1) ]
| ?- 8.

[1] no
| ?- 
|    
|    [ End Break  (level 1) ]
Next fact? isort([2,3,1],[2,3,1]),false.
Checking fact(s)...
Error: wrong solution isort([2,3,1],[2,3,1]). diagnosing...

Query: insert(3,[1],[3,1])? n.
Error diagnosed: (insert(3,[1],[3,1]):-true) is false.
Listing of insert(X,Y,Z):
    (insert(X,[Y|Z],[Y,X|Z]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: insert(1,[],[1]) is uncovered.

Searching for a cover to insert(1,[],[1])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[],Y):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Checking: (insert(X,Y,[X|Y]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[],[Y|Z]):-true)
Refining: (insert(X,Y,[X|Y]):-true)
Checking: (insert(X,[],[X]):-true)
Found clause: (insert(X,[],[X]):-true)
    after searching 9 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[Y|Z],[Y,X|Z]):-true).
    (insert(X,[],[X]):-true).

Checking fact(s)...no error found.

Next fact? isort([2,1,3],[3,2,1]),false.
Checking fact(s)...
Error: wrong solution isort([2,1,3],[3,2,1]). diagnosing...

Query: isort([3],[3])? y.

Query: isort([1,3],[3,1])? n.

Query: insert(1,[3],[3,1])? n.
Error diagnosed: (insert(1,[3],[3,1]):-true) is false.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: insert(3,[1],[1,3]) is uncovered.

Searching for a cover to insert(3,[1],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))

Query: insert(3,[],[3])? y.
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))

Query: insert(1,[],[3])? n.
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,Y,[Z,U]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y|Z],[Y,X|Z]):-true)
Checking: (insert(X,[Y],[Y,X]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-Y=<X)
Found clause: (insert(X,[Y|Z],[Y,X|Z]):-Y=<X)
    after searching 45 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[Y,X|Z]):-Y=<X).

Checking fact(s)...no error found.

Next fact? isort([2,1,3],[1,2,3]),true.
Checking fact(s)...
Error: missing solution isort([2,1,3],[1,2,3]). diagnosing...

Query: isort([1,3],X)? y.
Which X? [1,3].

Query: insert(1,[3],[1,3])? y.
Error diagnosed: insert(1,[3],[1,3]) is uncovered.

Searching for a cover to insert(1,[3],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Checking: (insert(X,Y,[X|Y]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))
Refining: (insert(X,Y,[X|Y]):-true)
Checking: (insert(X,[Y|Z],[X,Y|Z]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[X,Y|Z]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Checking: (insert(X,[Y|Z],[X|V]):-insert(Y,Z,V))
Refuted: (insert(3,[1],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[X,Y|Z]):-true)
Checking: (insert(X,[Y],[X,Y]):-true)
Refuted: (insert(3,[1],[3,1]):-true)
Checking: (insert(X,[Y|Z],[X,Y|Z]):-X=<Y)
Found clause: (insert(X,[Y|Z],[X,Y|Z]):-X=<Y)
    after searching 32 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[Y,X|Z]):-Y=<X).
    (insert(X,[Y|Z],[X,Y|Z]):-X=<Y).

Checking fact(s)...no error found.

Next fact? isort([3,2,1],[1,3,2]),false.
Checking fact(s)...
Error: wrong solution isort([3,2,1],[1,3,2]). diagnosing...

Query: isort([2,1],[1,2])? y.

Query: insert(3,[1,2],[1,3,2])? n.
Error diagnosed: (insert(3,[1,2],[1,3,2]):-1=<3) is false.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[X,Y|Z]):-X=<Y).

Checking fact(s)...
Error: missing solution isort([2,3,1],[1,2,3]). diagnosing...
Error diagnosed: insert(3,[1],[1,3]) is uncovered.

Searching for a cover to insert(3,[1],[1,3])...
Refining: (insert(X,Y,Z):-true)
Refining: (insert(X,[Y|Z],U):-true)
Refining: (insert(X,Y,[Z|U]):-true)
Refining: (insert(X,[Y],Z):-true)
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,[Y|Z],U):-insert(X,Z,X1))
Refining: (insert(X,[Y|Z],U):-insert(Y,Z,X1))
Refining: (insert(X,[Y|Z],[U|V]):-true)
Refining: (insert(X,Y,[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Refining: (insert(X,[Y],[Z|U]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U|V]):-insert(X,Z,Y1))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Refuted: (insert(1,[3],[3,1]):-insert(1,[],[1]))
Refining: (insert(X,[Y|Z],[U|V]):-insert(Y,Z,Y1))
Refining: (insert(X,[Y|Z],[U,V|W]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,Y,[Z,U]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y|Z],[Y,X|Z]):-true)
Checking: (insert(X,[Y],[Y,X]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Checking: (insert(X,[Y|Z],[Y,X|Z]):-Y=<X)
Refuted: (insert(3,[1,2],[1,3,2]):-1=<3)
Refining: (insert(X,[Y],[Z,U|V]):-true)
Refining: (insert(X,[Y|Z],[U,V]):-true)
Checking: (insert(X,[Y|Z],[Y,X]):-true)
Refuted: (insert(1,[3],[3,1]):-true)
Refining: (insert(X,[Y|Z],[U,V|W]):-insert(X,Z,Z1))

Query: insert(3,[],[])? n.
Refining: (insert(X,[Y|Z],[U,V|W]):-insert(Y,Z,Z1))

Query: insert(1,[],[])? n.
Refining: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V))
Checking: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V),Y=<X)
Found clause: (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V),Y=<X)
    after searching 51 clauses.
Listing of insert(X,Y,Z):
    (insert(X,[],[X]):-true).
    (insert(X,[Y|Z],[X,Y|Z]):-X=<Y).
    (insert(X,[Y|Z],[Y|V]):-insert(X,Z,V),Y=<X).

Checking fact(s)...no error found.

Next fact? !Illegal input

Next fact? [ Execution aborted ]

| ?- core    101376  (55808 lo-seg + 45568 hi-seg)
heap     38912 =  17698 in use +  21214 free
global    1451 =     16 in use +   1435 free
local     1024 =     16 in use +   1008 free
trail      511 =      0 in use +    511 free
    0.09 sec. for 2 GCs gaining 6652 words
    0.16 sec. for 33 local shifts and 36 trail shifts
   51.85 sec. runtime
